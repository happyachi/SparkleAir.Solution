@model IEnumerable<SparkleAir.Infa.ViewModel.AirFlights.AirFlightManagementIndexVm>
@using SparkleAir.Infa.ViewModel.AirFlights
@{
	ViewBag.Title = "Index";
}

@section styles{
	<style>
		.flight-details p {
			margin: 10px 0;
			line-height: 1.5;
		}

		.flight-details strong {
			color: #161A30; /* Blue color for strong tags */
		}
	</style>
}
<h2>航班管理</h2>
<p>
	<button type="button" class="btn btn-sm btn-dark ps-2 pe-2 btn-create createbtn" data-bs-toggle="modal" data-bs-target="#createpage" onclick="createPage()"> <i class="fa-solid fa-plus"></i>&nbsp;&nbsp;新增</button>

</p>
<div class="row" id="datas">
	<div style="overflow:auto">
		<table class="table text-center table_jq" id="flights">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.FlightCode)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DepartureAirport)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ArrivalAirport)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DepartureTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ArrivalTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DayofWeek)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr class="text-center" id="content">
						<td>
							@Html.DisplayFor(modelItem => item.FlightCode)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.DepartureAirport)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ArrivalAirport)
						</td>
						<td>
							@Html.Raw(item.DepartureTime.ToString("hh\\:mm"))
						</td>
						<td>
							@Html.Raw(item.ArrivalTime.ToString("hh\\:mm"))
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.DayofWeek)
						</td>
						<td>
							<a href='@Url.Action("Edit/")@item.Id' class="btn btn-sm btn-dark ps-2 pe-2 btn-edit"><i class="fa-solid fa-pen-to-square"></i>&nbsp;&nbsp;編輯</a> |
							@*<button type="button" class="btn btn-sm btn-dark ps-2 pe-2 btn-edit update-link" data-bs-toggle="modal" data-bs-target="#updatepage" onclick="update('@item.Id')"> <i class="fa-solid fa-file"></i>&nbsp;&nbsp;編輯</button> |*@
							<button type="button" class="btn btn-sm btn-dark ps-2 pe-2 btn-detail details-link" data-bs-toggle="modal" data-bs-target="#model" onclick="showModal('@item.Id')"> <i class="fa-solid fa-file"></i>&nbsp;&nbsp;詳細資訊</button> |
							<a href='@Url.Action("Create","Airflights")/@item.Id' class="btn btn-sm btn-dark ps-2 pe-2 btn-create"><i class="fa-solid fa-plus"></i>&nbsp;&nbsp;機型設定</a>

							@*@Html.ActionLink("刪除航班", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-dark" })*@
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<!--detail-->
<div class="modal fade" tabindex="-1" id="model" aria-labelledby="title" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-auto">
		<div class="modal-content">
			<div class="modal-header">
				<h3 id="title" class="flex-grow-1 d-flex align-items-center justify-content-center"></h3>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div id="detail" class="text-center">

				</div>
			</div>
		</div>
	</div>
</div>

<!--Create-->
<div class="modal fade" tabindex="-1" id="createpage" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="createTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-auto modal-dialog-scrollable modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h3 id="createTitle" class="flex-grow-1 d-flex align-items-center justify-content-center">新增航班</h3>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div id="createPage" class="d-flex align-items-center justify-content-center">
					@{
						Html.RenderPartial("Create", new AirFlightManagementCreateVm());
					}
				</div>
			</div>
		</div>
	</div>
</div>

<!--Edit-->
<div class="modal fade" tabindex="-1" id="updatepage" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="updateTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-auto modal-dialog-scrollable modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h3 id="updateTitle" class="flex-grow-1 d-flex align-items-center justify-content-center">更新航班</h3>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div id="updatePage" class="d-flex align-items-center justify-content-center">

				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		document.querySelectorAll(".details-link").forEach(function (link) {
			link.addEventListener('click', function (event) {
				event.preventDefault();
			});
		});

		document.querySelectorAll(".update-link").forEach(function (link) {
			link.addEventListener('click', function (event) {
				event.preventDefault();
			});
		});

		document.querySelector(".createbtn").addEventListener('click', function (event) {
			event.preventDefault();
		});

		function createPage() {
			try {
				document.getElementById("createpage").style.display = "block";
				$('#create').modal('show');
			} catch (error) {
				console.error('Error:', error);
			}
		};

		async function update(itemId) {
			  try {
        const response = await fetch('@Url.Content("~/AirFlightsManagement/Edit")' + `?id=${itemId}`);

        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json();

        const modalContent = document.querySelector('#updatePage');
        modalContent.innerHTML = data;

        $('#updatepage').modal('show');
		} catch (error) {
        console.error('Error:', error);
			}
		};

		    async function showModal(itemId) {
        try {
            const response = await fetch('@Url.Content("~/AirFlightsManagement/GetFlightDetails")' + `?id=${itemId}`);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const data = await response.json();

            const formattedDepartureTime = data.DepartureTime.Minutes.toString().padStart(2, '0')
            const formattedArrivalTime = data.ArrivalTime.Minutes.toString().padStart(2, '0')
            if (data.DepartureTerminal == null) {
                data.DepartureTerminal = '';
            }
            if (data.ArrivalTerminal == null) {
                data.ArrivalTerminal = '';
            }
            if (data.FlightModel == '') {
                data.FlightModel = '未設定'
            }
            const div = document.querySelector('#detail');
            const title = document.querySelector('#title');
            title.innerHTML = `${data.FlightCode}`
            div.innerHTML = `
<div class="flight-details">
    <p><strong>機型:</strong> ${data.FlightModel}</p>
    <p><strong>出發地:</strong> ${data.DepartureAirport}</p>
    <p><strong>目的地:</strong> ${data.ArrivalAirport}</p>
    <p><strong>出發航廈:</strong> ${data.DepartureTerminal}</p>
    <p><strong>抵達航廈:</strong> ${data.ArrivalTerminal}</p>
    <p><strong>出發時間:</strong> ${data.DepartureTime.Hours}:${formattedDepartureTime} UTC ${data.DepartureTimeZone}</p>
    <p><strong>抵達時間:</strong> ${data.ArrivalTime.Hours}:${formattedArrivalTime} UTC ${data.ArrivalTimeZone}</p>
    <p><strong>執飛日:</strong> ${data.DayofWeek}</p>
    <p><strong>飛行里程:</strong> ${data.Mile}</p>
</div>
    `;
            $('#model').modal('show');
        } catch (error) {
            console.error('Error:', error);
        }
		};

		const departureAirport = document.querySelector('#departureAir');
		const departureTime = document.querySelector('.deptTimeZone')
		departureAirport.addEventListener('change', () => {
			const dept = departureAirport.querySelector(`[value=${departureAirport.value}]`);
			departureTime.value = dept.getAttribute('data-yu-dept');
		});

		const arrivalAirpoirt = document.querySelector('#arrivalAir');
		const arrivalTime = document.querySelector('.arriTimeZone')
		arrivalAirpoirt.addEventListener('change', () => {
			const arri = arrivalAirpoirt.querySelector(`[value=${arrivalAirpoirt.value}]`);
			arrivalTime.value = arri.getAttribute('data-yu-arri');
		});

		const createCheckboxes = document.querySelectorAll('.day-checkbox');
		createCheckboxes.forEach(function (checkbox) {
			checkbox.addEventListener('change', function () {
				updateDayOfWeekSelection();
			});
		});

		function updateDayOfWeekSelection() {
			const selectedDays = Array.from(createCheckboxes)
				.filter(checkbox => checkbox.checked)
				.map(checkbox => checkbox.value.toString()); // 將數字轉換為字符串
			console.log(selectedDays);
			// 將選中的星期以逗號分隔的字串形式存儲到 DayOfWeekSelection 屬性
			document.getElementById('DayofWeek').value = selectedDays.join(',');
		};

		$(".create").on("click", function (e) {
			e.preventDefault();

			$.ajax({
				url: "/AirFlightsManagement/Create",
				type: "POST",
				data: $("form").serialize(),
				success: function (result) {
					if (result.success) {
						// 成功處理
						Swal.fire({
							icon: "success",
							title: "航班已新增",
							showConfirmButton: false,
							timer: 1700
						}).then(() => {
									window.location.href = '@Url.Action("Index", "AirFlightsManagement")';
								});;
						// 關閉 modal 或執行其他操作
					} else {
						// 顯示錯誤信息
						Swal.fire({
							icon: "error",
							title: "錯誤",
							text: result.errors.join("\n")
						});
					}
				},
				error: function () {
					// 處理錯誤
					console.log("Error");
				}
			});
		});

		$(".update").on("click", function (e) {
			e.preventDefault();
			Swal.fire({
				title: "你確定要更新嗎?",
				showCancelButton: true,
				confirmButtonText: "更新",
				cancelButtonText: "取消",
			}).then((result) => {

				if (result.isConfirmed) {
					$.ajax({
						url: "/AirFlightsManagement/Edit",
						type: "POST",
						data: $("form").serialize(),
						success: function (result) {
							if (result.success) {
								// 成功處理
								Swal.fire({
									icon: "success",
									title: "航班已更新",
									showConfirmButton: false,
									timer: 1700
								});
							} else {
								// 顯示錯誤信息
								Swal.fire({
									icon: "error",
									title: "錯誤",
									text: result.errors.join("\n")
								});
							}
						},
						error: function () {
							// 處理錯誤
							console.log("Error");
						}
					});
				} else if (result.isCanceled) {
					Swal.fire({
						title: "取消變更",
						icon: "info",
						timer: 1000
					});
				}
			});
		});
	</script>
}