@model IEnumerable<SparkleAir.Infa.ViewModel.AirFlights.AirFlightManagementIndexVm>

@{
	ViewBag.Title = "Index";
}

@section styles{
	<style>


		.flight-details p {
			margin: 10px 0;
			line-height: 1.5;
		}

		.flight-details strong {
			color: #161A30; /* Blue color for strong tags */
		}
	</style>
}
<h2>航班管理</h2>

@Html.ActionLink("新增航班", "Create", null, new { @class = "btn btn-sm btn-dark mt-2 mb-3" })
<div class="row" id="datas">
	<div style="overflow:auto">
		<!--<form id="filterForm" class="text-center align-items-center">
			<div class="form-group row">
				<div class="d-flex">
					<input type="text" class="form-control me-1" id="FlightCode" name="FlightCode">
				</div>
				<button type="button" class="btn btn-sm btn-dark col-sm-1" onclick="applyFilter()">搜尋</button>
			</div>-->
		<!-- 其他篩選條件... -->
		<!--</form>-->
		<table class="table text-center table_jq" id="flights">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.FlightCode)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DepartureAirport)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ArrivalAirport)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DepartureTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.ArrivalTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.DayofWeek)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr class="text-center" id="content">
						<td>
							@Html.DisplayFor(modelItem => item.FlightCode)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.DepartureAirport)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.ArrivalAirport)
						</td>
						<td>
							@Html.Raw(item.DepartureTime.ToString("hh\\:mm"))
						</td>
						<td>
							@Html.Raw(item.ArrivalTime.ToString("hh\\:mm"))
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.DayofWeek)
						</td>
						<td>
							@Html.ActionLink("編輯", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-dark" }) |
							@*<button type="button" class="btn btn-sm btn-dark edit-link" data-bs-toggle="modal" data-bs-target="#editModel" onclick="edit('@item.Id')">編輯</button> |*@
							<button type="button" class="btn btn-sm btn-dark details-link" data-bs-toggle="modal" data-bs-target="#model" onclick="showModal('@item.Id')">詳細資訊</button> |
							@Html.ActionLink("機型設定", "Create", "AirFlights", new { id = item.Id }, new { @class = "btn btn-sm btn-dark" })
							@*@Html.ActionLink("刪除航班", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-dark" })*@


						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<div class="modal fade" tabindex="-1" id="model" aria-labelledby="title" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-auto">
		<div class="modal-content">
			<div class="modal-header">
				<h3 id="title" class="flex-grow-1 d-flex align-items-center justify-content-center"></h3>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div id="detail" class="text-center">

				</div>
			</div>
		</div>
	</div>
</div>


@*<div id="divMore" style="display:none"></div>*@


@section Scripts
{
	<script>
    document.querySelectorAll(".details-link").forEach(function (link) {
        link.addEventListener('click', function (event) {
            event.preventDefault();
        });

    })

    async function showModal(itemId) {
        try {
            const response = await fetch('@Url.Content("~/AirFlightsManagement/GetFlightDetails")' + `?id=${itemId}`);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const data = await response.json();

            const formattedDepartureTime = data.DepartureTime.Minutes.toString().padStart(2, '0')
            const formattedArrivalTime = data.ArrivalTime.Minutes.toString().padStart(2, '0')
            if (data.DepartureTerminal == null) {
                data.DepartureTerminal = '';
            }
            if (data.ArrivalTerminal == null) {
                data.ArrivalTerminal = '';
			}
			if (data.FlightModel == '') {
				data.FlightModel = '未設定'
			}
            const div = document.querySelector('#detail');
            const title = document.querySelector('#title');
            title.innerHTML = `${data.FlightCode}`
            div.innerHTML = `
<div class="flight-details">
    <p><strong>機型:</strong> ${data.FlightModel}</p>
    <p><strong>出發地:</strong> ${data.DepartureAirport}</p>
    <p><strong>目的地:</strong> ${data.ArrivalAirport}</p>
    <p><strong>出發航廈:</strong> ${data.DepartureTerminal}</p>
    <p><strong>抵達航廈:</strong> ${data.ArrivalTerminal}</p>
    <p><strong>出發時間:</strong> ${data.DepartureTime.Hours}:${formattedDepartureTime} UTC ${data.DepartureTimeZone}</p>
    <p><strong>抵達時間:</strong> ${data.ArrivalTime.Hours}:${formattedArrivalTime} UTC ${data.ArrivalTimeZone}</p>
    <p><strong>執飛時間:</strong> ${data.DayofWeek}</p>
    <p><strong>飛行里程:</strong> ${data.Mile}</p>
</div>
    `;
            $('#model').modal('show');
        } catch (error) {
            console.error('Error:', error);
        }
    }


    async function applyFilter() {
        // 獲取表單數據
        var formData = $('#filterForm').serialize();




        const content = document.querySelector('#content');
        const response = await fetch('@Url.Content("~/AirFlightsManagement/SearchPartial")' + `?${formData}`);
        const data = await response.json();
        console.log(data);
        // 發送 AJAX 請求
        //const response = await fetch(url);
        //const data = await response.text();
        /*$('#datas').html(data);*/
        content.innerHTML = '';
        data.forEach(item => {

            // 以類似的方式建立其他單元格...

            // 在每個單元格中加入資料
            content.innerHTML = `
    <td>${item.FlightCode}</td>
    <td>${item.DepartureAirport}</td>
    <td>${item.ArrivalAirport}</td>
    <td>${item.DepartureTime.Hours}:${item.DepartureTime.Minutes.toString().padStart(2, '0')}</td>
    <td>${item.ArrivalTime.Hours}:${item.ArrivalTime.Minutes.toString().padStart(2, '0')}</td>
    <td>${item.DayofWeek}</td>
    <td>


    </td>
`;
        });
    }
	</script>
}

