@model SparkleAir.Infa.ViewModel.AirFlights.AirFlightManagementCreateVm

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css" rel="stylesheet">


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="mb-3">
			@Html.LabelFor(model => model.FlightCode, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.FlightCode, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.FlightCode, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureAirport, htmlAttributes: new { @class = "control-label" })
			<select class="form-select" aria-label="Default select example" name="DepartureAirport" id="departureAir">
				<option selected></option>

				@foreach (var airport in ViewBag.Airports)
				{
					<option value="@airport.Lata" data-yu-dept="@(airport.TimeArea)">@airport.Lata</option>
				}
			</select>
			@Html.ValidationMessageFor(model => model.DepartureTimeZone, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTimeZone, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.DepartureTimeZone, new { htmlAttributes = new { @class = "form-control deptTimeZone" } })
			@Html.ValidationMessageFor(model => model.DepartureTimeZone, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalAirport, htmlAttributes: new { @class = "control-label " })
			<select class="form-select" aria-label="Default select example" name="ArrivalAirport" id="arrivalAir">
				<option selected></option>

				@foreach (var airport in ViewBag.Airports)
				{
					<option value="@airport.Lata" data-yu-arri="@(airport.TimeArea)">@airport.Lata</option>
				}
			</select>
			@Html.ValidationMessageFor(model => model.ArrivalAirport, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTimeZone, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.ArrivalTimeZone, new { htmlAttributes = new { @class = "form-control arriTimeZone" } })
			@Html.ValidationMessageFor(model => model.ArrivalTimeZone, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTerminal, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.DepartureTerminal, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DepartureTerminal, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTerminal, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.ArrivalTerminal, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ArrivalTerminal, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label" })

			<input type="time" id="DepartureTime" name="DepartureTime" class="form-control" />

			@Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTime, htmlAttributes: new { @class = "control-label " })

			<input type="time" id="ArrivalTime" name="ArrivalTime" class="form-control" />

			@Html.ValidationMessageFor(model => model.ArrivalTime, "", new { @class = "text-danger" })
		</div>
		<div class="mb-3">
			@Html.LabelFor(model => model.CrossDay, htmlAttributes: new { @class = "control-label " })

			@Html.EditorFor(model => model.CrossDay, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.CrossDay, "", new { @class = "text-danger" })
		</div>
		<div class="mb-3">
			@Html.LabelFor(model => model.DayofWeek, htmlAttributes: new { @class = "control-label" })<br />


			@foreach (var day in Enumerable.Range(0, 7))
			{
				<label class="checkbox-inline">
					<input type="checkbox" class="day-checkbox" name="selectedDays" value="@day" /> @Enum.GetName(typeof(DayOfWeek), day)
				</label>
			}

			<input type="hidden" id="DayofWeek" name="DayofWeek" value="" /> <!-- 设置一个空的隐藏字段 -->
			@Html.ValidationMessageFor(model => model.DayofWeek, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.Mile, htmlAttributes: new { @class = "control-label" })

			@Html.EditorFor(model => model.Mile, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Mile, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			<div class="col-md-offset-2 col-md-10">
				<button type="submit" class="btn btn-dark create" onclick="create()">新增</button>
				@Html.ActionLink("返回", "Index", null, new { @class = "btn btn-dark" })
			</div>
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
