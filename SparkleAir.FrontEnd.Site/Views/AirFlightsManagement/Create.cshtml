@model SparkleAir.Infa.ViewModel.AirFlights.AirFlightManagementCreateVm

@{
	ViewBag.Title = "Create";
}

<h2>新增航班</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="mb-3">
			@Html.LabelFor(model => model.FlightCode, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.FlightCode, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.FlightCode, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureAirport, htmlAttributes: new { @class = "control-label col-md-2" })
			<select class="form-select" aria-label="Default select example" name="DepartureAirport" id="departureAir">
				<option selected></option>

				@foreach (var airport in ViewBag.Airports)
				{
					<option value="@airport.Lata" data-yu-dept="@(airport.TimeArea)">@airport.Lata</option>
				}
			</select>
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTimeZone, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.DepartureTimeZone, new { htmlAttributes = new { @class = "form-control deptTimeZone" } })
			@Html.ValidationMessageFor(model => model.DepartureTimeZone, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalAirport, htmlAttributes: new { @class = "control-label col-md-2" })
			<select class="form-select" aria-label="Default select example" name="ArrivalAirport" id="arrivalAir">
				<option selected></option>

				@foreach (var airport in ViewBag.Airports)
				{
					<option value="@airport.Lata" data-yu-arri="@(airport.TimeArea)">@airport.Lata</option>
				}
			</select>

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTimeZone, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.ArrivalTimeZone, new { htmlAttributes = new { @class = "form-control arriTimeZone" } })
			@Html.ValidationMessageFor(model => model.ArrivalTimeZone, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTerminal, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.DepartureTerminal, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DepartureTerminal, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTerminal, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.ArrivalTerminal, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ArrivalTerminal, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-2" })

			<input type="time" id="DepartureTime" name="DepartureTime" class="form-control" />

			@Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.ArrivalTime, htmlAttributes: new { @class = "control-label col-md-2" })

			<input type="time" id="ArrivalTime" name="ArrivalTime" class="form-control" />

			@Html.ValidationMessageFor(model => model.ArrivalTime, "", new { @class = "text-danger" })
		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.DayofWeek, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.DayofWeek, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DayofWeek, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			@Html.LabelFor(model => model.Mile, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.Mile, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Mile, "", new { @class = "text-danger" })

		</div>

		<div class="mb-3">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="新增" class="btn btn-dark" />
				@Html.ActionLink("返回", "Index", null, new { @class = "btn btn-dark" })
			</div>
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		const deptAir = document.querySelector('#departureAir');
		const detpTime = document.querySelector('.deptTimeZone')
		deptAir.addEventListener('change', () => {
			const dept = deptAir.querySelector(`[value=${deptAir.value}]`);
			detpTime.value = dept.getAttribute('data-yu-dept');
		})

		const arriAir = document.querySelector('#arrivalAir');
		const arriTime = document.querySelector('.arriTimeZone')
		arriAir.addEventListener('change', () => {
			const arri = arriAir.querySelector(`[value=${arriAir.value}]`);
			arriTime.value = arri.getAttribute('data-yu-arri');
		})
	</script>
}
