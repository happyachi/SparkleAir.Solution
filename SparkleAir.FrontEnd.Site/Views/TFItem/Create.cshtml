@model SparkleAir.Infa.ViewModel.TaxFree.TFItemVm

@{
    ViewBag.Title = "新增商品";
}

<h2>新增商品</h2>

@using (Html.BeginForm("Create", "TFItem", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>TFItemVm</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.TFCategoriesName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="TFCategoriesName" name="TFCategoriesName" class="form-select" aria-label="Default select example" onchange="updateTFCategoriesId()">
                @foreach (var item in ViewBag.TFCategories)
                {
                    <option value="@item">@item</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.TFCategoriesName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TFCategoriesId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TFCategoriesId, new { htmlAttributes = new { @class = "form-control", @id = "TFCategoriesId"  } })
            @Html.ValidationMessageFor(model => model.TFCategoriesId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img src="@Url.Content($"~/Files/Images/{Model.Image}")" alt="Uploaded Image" width="200" />
            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        <label class="control-label col-md-2" for="File">上傳商品圖片</label>
        <div class="col-md-10">
            <input type="file" name="File" class="form-control" multiple />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPublished, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsPublished)
                @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function updateTFCategoriesId() {
            var selectedCategory = $("#TFCategoriesName").val();

            var categoryMapping = {
                "飾品精品": 1,
                "生活旅行": 2,
                "電子產品": 3,
                "點心茶飲": 4,
                "寵物專區": 5
                
            };

            $("#TFCategoriesId").val(categoryMapping[selectedCategory]);
        }

       
    </script>

}
