@using SparkleAir.Infa.ViewModel.AirFlights
@model SparkleAir.FrontEnd.Site.Models.ViewModels.Campaigns.CampaignsCouponVm

@{
    ViewBag.Title = "Create";

    var list = ViewBag.List as IEnumerable<AirFlightVm>;

}


<style>
    #selectContainer {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        display: none;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    #DateStart, #DateEnd {
        width: 3000px; /* Adjust the width as needed */
    }

    /*Member間距*/
    .member-label {
        margin-right: 50px;
    }
    .productslist {
        width: 300px; /* Adjust the width as needed */
        height: 200px;
    }

    .title {
        font-weight: bold;
        font-size: 2.4em; /* 調整文字大小 */
    }

    .form-horizontal label.control-label {
        font-weight: bold;
        font-size: 1.2em; /* 調整文字大小 */
    }

    .form-horizontal .form-group {
        margin-bottom: 15px; /* 調整行之間的間距 */
    }

    /* 如果需要美化細節，也可以針對其他元素進行樣式設定 */

    .discountLabel {
        font-weight: bold;
        font-size: 1.2em; /* 調整文字大小 */
    }

    .productslist {
        margin-top: 15px; /* 調整間距 */
    }
</style>


<h2 class="title">新增優惠券</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    @*<div class="form-group">
            @Html.LabelFor(model => model.Campaign, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Campaign, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Campaign, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group mt-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group mt-3">
        @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" id="DateStart" name="DateStart" class="control-label" />
            @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" id="DateEnd" name="DateEnd" class="control-label" />
            @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@


<div class="form-group mt-3">
    <p style="font-size: 1.2em; font-weight: bold;">折扣類型</p>

    <select name="CampaignId" id="CampaignId" class="form-select CampaignId" aria-label="Default select example">
        <option selected>請下拉選擇</option>
        <option value="1">折扣金額</option>
        <option value="4">折扣折數</option>
    </select>
</div>

    <div class="form-group">
        <div class="discountLabel">
            折扣金額或百分比
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiscountValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiscountValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiscountQuantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiscountQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.AvailableQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableQuantity, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.MinimumOrderValue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MinimumOrderValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinimumOrderValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaximumDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaximumDiscountAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaximumDiscountAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DisplayDescription)
                @Html.ValidationMessageFor(model => model.DisplayDescription, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MemberCriteria, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-check">
                @if (ViewBag.Member != null)
                {
                    foreach (var member in ViewBag.Member)
                    {
                        <label class="checkbox-inline member-label">
                            <input class="form-check-input" type="checkbox" value="@member.Name" data-member="@member.Name" name="members">@member.Name
                        </label>
                    }
                }
                <input type="hidden" name="MemberCriteria" id="flexCheckDefault" value="" />
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AirFlightsCriteria, htmlAttributes: new { @class = "control-label col-md-2" })
        @*<div class="col-md-10">
                @Html.EditorFor(model => model.AirFlightsCriteria, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AirFlightsCriteria, "", new { @class = "text-danger" })
            </div>*@
    </div>
    <div>
        <button type="button" class="btn btn-sm btn-dark col-sm-1" onclick="toggle()">新增活動航班</button>
    </div>
    <div class="select" id="selectContainer" style="display: none;">
        <div id="SelectFlights">
            @{
                Html.RenderPartial("SelectFlights", list);
            }
        </div>
        <button type="button" class="btn btn-sm btn-dark col-sm-1" onclick="cancelFlights()">取消</button>
        <button type="button" class="btn btn-sm btn-dark col-sm-1" onclick="saveFlights()">儲存</button>
    </div>
    @*<div class="myproductslist"></div>*@
    <textarea class="productslist" name="AirFlightsCriteria" value="" id="productList"></textarea>


    <div class="mb-3">
        <div class="col-md-offset-2 col-md-10 mt-5">
            <input type="submit" value="新增" class="btn btn-sm btn-success ps-3 pe-3 btn-create" />
        </div>
    </div>
</div>
}

<hr>
<div>
    <a href='@Url.Action("Index/")' class="btn btn-sm btn-dark ps-2 pe-2 btn-back-to-list"><i class="fa-solid fa-backward"></i>&nbsp;&nbsp;回清單頁</a>
</div>

@section Scripts {

    <script>

        /*折扣金額與百分比*/
        document.addEventListener("DOMContentLoaded", function () {
            var selectElement = document.querySelector(".CampaignId");
            var discountLabel = document.querySelector(".discountLabel");

            selectElement.addEventListener("change", function () {
                if (selectElement.value === "1") {
                    discountLabel.innerHTML = "折扣金額";
                } else if (selectElement.value === "4") {
                    discountLabel.innerHTML = "折扣百分比";
                } else {
                    discountLabel.innerHTML = "折扣金額或百分比";
                }
            });
        });

        function toggle() {
            var selectContainer = document.querySelector('#selectContainer');
            selectContainer.style.display = 'block';
            selectContainer.style.opacity = '1';
        }

        function cancelFlights() {
            var selectContainer = document.querySelector('#selectContainer');
            selectContainer.style.opacity = '0';
            setTimeout(function () {
                selectContainer.style.display = 'none';
            }, 300);
        }

        function updateMember() {
            const members = Array.from(checks)
                .filter(checkbox => checkbox.checked)
                .map(checkbox => checkbox.value);

            document.getElementById('flexCheckDefault').value = members.join(',');
            console.log(members);
        }

        const input = document.querySelector('#Name');
        const checks = document.querySelectorAll('.form-check-input');

        input.addEventListener('change', () => {
            checks.forEach(function (checkbox) {
                checkbox.checked = "checked";
                updateMember();
                console.log("update")
            });

            checks.forEach(function (item) {
                item.addEventListener('change', function () {
                    updateMember();
                    console.log("cancle")
                });
            });
        });

        function updateMyProductsList(selectedIds) {
            const myProductsList = document.querySelector('#productList');
            myProductsList.value = selectedIds.join(',');
        }

        //儲存
        function saveFlights() {
            var selectContainer = document.querySelector('#selectContainer');
            selectContainer.style.opacity = '0';

            // Get selected IDs from the partial view
            const selectedIds = Array.from(checks)
                .filter(checkbox => checkbox.checked)
                .map(checkbox => checkbox.getAttribute('data-member'));

            // Update the list in the main view
            updateMyProductsList(selectedIds);

            setTimeout(function () {
                selectContainer.style.display = 'none';
            }, 300);
        }

        // 获取选择框元素
        var campaignSelect = document.getElementById("CampaignId");

        // 获取折扣值输入框元素
        var discountValueInput = document.getElementById("DiscountValue");

        // 添加事件监听器
        campaignSelect.addEventListener("change", function () {
            // 获取选择框当前选中的值
            var selectedValue = campaignSelect.value;

            // 根据选择的值设置输入框的预设文字
            if (selectedValue === "4") {
                discountValueInput.placeholder = "輸入95，表示95折";
            } else {
                discountValueInput.placeholder = "輸入100，表示折100元";
            }
        });


    </script>
}
